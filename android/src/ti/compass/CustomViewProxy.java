/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2017 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 */
package ti.compass;

import android.app.Activity;
import android.graphics.Color;
import android.view.View;
import android.view.ViewGroup;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.TiC;
import org.appcelerator.titanium.TiDimension;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.util.TiConvert;
import org.appcelerator.titanium.view.TiCompositeLayout;
import org.appcelerator.titanium.view.TiCompositeLayout.LayoutArrangement;
import org.appcelerator.titanium.view.TiUIView;


// This proxy can be created by calling TiCompass.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule = TiCompassModule.class)
public class CustomViewProxy extends TiViewProxy {
    // Standard Debugging variables
    private static final String LCAT = "ExampleProxy";
    private static final boolean DBG = TiConfig.LOGD;

    // Constructor
    public CustomViewProxy() {
        super();
    }

    protected ExampleView getView() {
        return (ExampleView) getOrCreateView();
    }

    @Override
    public TiUIView createView(Activity activity) {
        TiUIView view = new ExampleView(this);
        view.getLayoutParams().autoFillsHeight = false;
        view.getLayoutParams().autoFillsWidth = false;
        return view;
    }

    class ExampleView extends TiUIView {
        public ExampleView(TiViewProxy proxy) {
            super(proxy);
            LayoutArrangement arrangement = LayoutArrangement.DEFAULT;
            View view = new TiCompositeLayout(proxy.getActivity(), arrangement);
            view.setLayoutParams(new TiCompositeLayout.LayoutParams());
            view.setBackgroundColor(Color.GREEN);
            setNativeView(view);
        }

        @Override
        public void processProperties(KrollDict d) {
            super.processProperties(d);
        }
    }

}
